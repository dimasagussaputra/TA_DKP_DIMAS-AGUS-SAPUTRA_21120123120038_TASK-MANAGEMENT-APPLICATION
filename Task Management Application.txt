import tkinter as tk
from tkinter import font as tkfont

class Task:
    def __init__(self, task_name, task_given_date, deadline_date):
        self.task_name = task_name
        self.task_given_date = task_given_date
        self.deadline_date = deadline_date
        self.completed = False

    def mark_as_completed(self):
        self.completed = True

class TaskManager:
    def __init__(self):
        self.tasks = []

    def add_task(self, task):
        self.tasks.append(task)

    def display_tasks(self):
        tasks_display.delete(1.0, tk.END)
        for index, task in enumerate(self.tasks, start=1):
            task_text = f"{index}. {task.task_name} - Tanggal Pemberian Tugas: {task.task_given_date} - Deadline Tugas: {task.deadline_date} - Selesai: {'Ya' if task.completed else 'Belum'}"
            if not task.completed:
                task_text += f" - [Tandai Selesai]"
            tasks_display.insert(tk.END, f"{task_text}\n")
            tasks_display.tag_add("task", f"{index}.0", f"{index}.end")
            tasks_display.tag_config("task", font=("Verdana", 9))

    def mark_task_as_completed(self, index):
        if 0 <= index < len(self.tasks):
            self.tasks[index].mark_as_completed()
            self.display_tasks()

    def remove_completed_tasks(self):
        self.tasks = [task for task in self.tasks if not task.completed]
        self.display_tasks()

def add_task():
    task_name = task_name_entry.get()
    task_given_date = task_given_date_entry.get()
    deadline_date = deadline_date_entry.get()
    new_task = Task(task_name, task_given_date, deadline_date)
    task_manager.add_task(new_task)

    task_name_entry.delete(0, tk.END)
    task_given_date_entry.delete(0, tk.END)
    deadline_date_entry.delete(0, tk.END)

    task_name_entry.focus_set()

def mark_task(event):
    index = int(tasks_display.index(tk.CURRENT).split(".")[0]) - 1
    task_manager.mark_task_as_completed(index)

def show_page(page):
    page.tkraise()
    if page == page2:
        task_manager.display_tasks()

task_manager = TaskManager()

root = tk.Tk()
root.title("Task Management Application")

custom_font = tkfont.Font(family="Verdana", size=9)
title_font = tkfont.Font(family="Verdana", size=16, weight="bold")

page1 = tk.Frame(root, bg='#ffe6e6')
page2 = tk.Frame(root, bg='#ffe6e6')

for page in (page1, page2):
    page.grid(row=0, column=0, sticky='nsew')

title_label = tk.Label(page1, text="Aplikasi Manajemen Tugas Kuliah", font=title_font, bg='#ffff99', padx=10, pady=10)
title_label.grid(row=0, column=0, columnspan=2, pady=10)

task_name_label = tk.Label(page1, text="Nama Tugas:", font=custom_font, bg='#ffcc99', borderwidth=2, relief="groove", padx=5, pady=5)
task_name_label.grid(row=1, column=0, pady=5)
task_name_entry = tk.Entry(page1, font=custom_font)
task_name_entry.grid(row=1, column=1, pady=5)

task_given_date_label = tk.Label(page1, text="Tanggal Pemberian Tugas:", font=custom_font, bg='#ffcc99', borderwidth=2, relief="groove", padx=5, pady=5)
task_given_date_label.grid(row=2, column=0, pady=5)
task_given_date_entry = tk.Entry(page1, font=custom_font)
task_given_date_entry.grid(row=2, column=1, pady=5)

deadline_date_label = tk.Label(page1, text="Deadline Tugas:", font=custom_font, bg='#ffcc99', borderwidth=2, relief="groove", padx=5, pady=5)
deadline_date_label.grid(row=3, column=0, pady=5)
deadline_date_entry = tk.Entry(page1, font=custom_font)
deadline_date_entry.grid(row=3, column=1, pady=5)

add_button = tk.Button(page1, text="Tambah Tugas", command=add_task, font=custom_font, bg='#d28eff', borderwidth=2, relief="raised", padx=5, pady=5)
add_button.grid(row=4, column=0, columnspan=2, pady=5)

next_button = tk.Button(page1, text="Lihat Tugas", command=lambda: show_page(page2), font=custom_font, bg='#d28eff', borderwidth=2, relief="raised", padx=5, pady=5)
next_button.grid(row=5, column=0, columnspan=2, pady=5)

tasks_display = tk.Text(page2, font=custom_font)
tasks_display.grid(row=0, column=0, columnspan=2, pady=5)
tasks_display.config(state=tk.NORMAL)
tasks_display.bind("<Button-1>", mark_task)

delete_button = tk.Button(page2, text="Hapus Tugas Yang Selesai", command=task_manager.remove_completed_tasks, font=custom_font, bg='#d28eff', borderwidth=2, relief="raised", padx=5, pady=5)
delete_button.grid(row=1, column=0, columnspan=2, pady=5)

back_button = tk.Button(page2, text="Kembali", command=lambda: show_page(page1), font=custom_font, bg='#d28eff', borderwidth=2, relief="raised", padx=5, pady=5)
back_button.grid(row=2, column=0, columnspan=2, pady=5)

show_page(page1)

root.mainloop()
